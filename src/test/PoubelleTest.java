package test;

import model.*;

public class PoubelleTest {

    public static void runTest() {
        System.out.println("üß™=== TEST POUBELLE ===");

        // Cr√©ation d'un utilisateur
        Utilisateur u = new Utilisateur("Bob");

        // Cr√©ation d'une poubelle JAUNE
        Poubelle p = new Poubelle(10, "Avenue Verte", "JAUNE");
        System.out.println("üóëÔ∏è Poubelle cr√©√©e : ID " + p.getId() + ", type : " + p.getTypePoubelle());

        // V√©rification acc√®s utilisateur
        System.out.println("üîê Acc√®s autoris√© ? " + p.verifierAcces(u));

        // V√©rifier conformit√© de plusieurs d√©chets
        System.out.println("‚úîÔ∏è Conformit√© PLASTIQUE ? " + p.verifierTypeDechets(NatureDechet.PLASTIQUE)); // true
        System.out.println("‚ùå Conformit√© VERRE ? " + p.verifierTypeDechets(NatureDechet.VERRE));         // false

        // D√©p√¥t conforme (plastique)
        Depot d1 = new Depot(u, p, NatureDechet.PLASTIQUE, 2, 3);;
        p.ajouterDechets(d1);

        // D√©p√¥t non conforme (verre)
        Depot d2 = new Depot(u, p, NatureDechet.VERRE, 1, -2);
        p.ajouterDechets(d2);

        // Test du calcul total
        System.out.println("üì¶ Quantit√© totale d√©pos√©e : " + p.calculerQuantiteDechets());

        // Attribution des points (simulation manuelle)
        int points1 = p.attribuerPoint(NatureDechet.PLASTIQUE, 5.0);
        int points2 = p.attribuerPoint(NatureDechet.VERRE, 3.0);
        System.out.println("üéØ Points attribu√©s (PLASTIQUE) : " + points1);
        System.out.println("‚ùå Points attribu√©s (VERRE) : " + points2);

        // D√©border la capacit√© (ajouter encore un d√©p√¥t)
        Depot d3 = new Depot(u, p, NatureDechet.PLASTIQUE, 10, 5);
        p.ajouterDechets(d3); // ‚ûú devrait d√©clencher notification

        // Affichage final
        System.out.println("üßæ D√©p√¥ts dans la poubelle :");
        for (Depot d : p.getDepots()) {
            System.out.println(" - " + d);
        }

        System.out.println("‚úÖ Fin test Poubelle\n");
    }
}

